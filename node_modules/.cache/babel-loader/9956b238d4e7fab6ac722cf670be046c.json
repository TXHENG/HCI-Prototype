{"ast":null,"code":"/* global VERSION */\nimport 'noty.scss';\nimport Promise from 'es6-promise';\nimport * as Utils from 'utils';\nimport * as API from 'api';\nimport { NotyButton } from 'button';\nimport { Push } from 'push';\nexport default class Noty {\n  /**\n   * @param {object} options\n   * @return {Noty}\n   */\n  constructor(options = {}) {\n    this.options = Utils.deepExtend({}, API.Defaults, options);\n\n    if (API.Store[this.options.id]) {\n      return API.Store[this.options.id];\n    }\n\n    this.id = this.options.id || Utils.generateID('bar');\n    this.closeTimer = -1;\n    this.barDom = null;\n    this.layoutDom = null;\n    this.progressDom = null;\n    this.showing = false;\n    this.shown = false;\n    this.closed = false;\n    this.closing = false;\n    this.killable = this.options.timeout || this.options.closeWith.length > 0;\n    this.hasSound = this.options.sounds.sources.length > 0;\n    this.soundPlayed = false;\n    this.listeners = {\n      beforeShow: [],\n      onShow: [],\n      afterShow: [],\n      onClose: [],\n      afterClose: [],\n      onClick: [],\n      onHover: [],\n      onTemplate: []\n    };\n    this.promises = {\n      show: null,\n      close: null\n    };\n    this.on('beforeShow', this.options.callbacks.beforeShow);\n    this.on('onShow', this.options.callbacks.onShow);\n    this.on('afterShow', this.options.callbacks.afterShow);\n    this.on('onClose', this.options.callbacks.onClose);\n    this.on('afterClose', this.options.callbacks.afterClose);\n    this.on('onClick', this.options.callbacks.onClick);\n    this.on('onHover', this.options.callbacks.onHover);\n    this.on('onTemplate', this.options.callbacks.onTemplate);\n    return this;\n  }\n  /**\n   * @param {string} eventName\n   * @param {function} cb\n   * @return {Noty}\n   */\n\n\n  on(eventName, cb = () => {}) {\n    if (typeof cb === 'function' && this.listeners.hasOwnProperty(eventName)) {\n      this.listeners[eventName].push(cb);\n    }\n\n    return this;\n  }\n  /**\n   * @return {Noty}\n   */\n\n\n  show() {\n    if (this.showing || this.shown) {\n      return this; // preventing multiple show\n    }\n\n    if (this.options.killer === true) {\n      Noty.closeAll();\n    } else if (typeof this.options.killer === 'string') {\n      Noty.closeAll(this.options.killer);\n    }\n\n    let queueCounts = API.getQueueCounts(this.options.queue);\n\n    if (queueCounts.current >= queueCounts.maxVisible || API.PageHidden && this.options.visibilityControl) {\n      API.addToQueue(this);\n\n      if (API.PageHidden && this.hasSound && Utils.inArray('docHidden', this.options.sounds.conditions)) {\n        Utils.createAudioElements(this);\n      }\n\n      if (API.PageHidden && Utils.inArray('docHidden', this.options.titleCount.conditions)) {\n        API.docTitle.increment();\n      }\n\n      return this;\n    }\n\n    API.Store[this.id] = this;\n    API.fire(this, 'beforeShow');\n    this.showing = true;\n\n    if (this.closing) {\n      this.showing = false;\n      return this;\n    }\n\n    API.build(this);\n    API.handleModal(this);\n\n    if (this.options.force) {\n      this.layoutDom.insertBefore(this.barDom, this.layoutDom.firstChild);\n    } else {\n      this.layoutDom.appendChild(this.barDom);\n    }\n\n    if (this.hasSound && !this.soundPlayed && Utils.inArray('docVisible', this.options.sounds.conditions)) {\n      Utils.createAudioElements(this);\n    }\n\n    if (Utils.inArray('docVisible', this.options.titleCount.conditions)) {\n      API.docTitle.increment();\n    }\n\n    this.shown = true;\n    this.closed = false; // bind button events if any\n\n    if (API.hasButtons(this)) {\n      Object.keys(this.options.buttons).forEach(key => {\n        const btn = this.barDom.querySelector(`#${this.options.buttons[key].id}`);\n        Utils.addListener(btn, 'click', e => {\n          Utils.stopPropagation(e);\n          this.options.buttons[key].cb(this);\n        });\n      });\n    }\n\n    this.progressDom = this.barDom.querySelector('.noty_progressbar');\n\n    if (Utils.inArray('click', this.options.closeWith)) {\n      Utils.addClass(this.barDom, 'noty_close_with_click');\n      Utils.addListener(this.barDom, 'click', e => {\n        Utils.stopPropagation(e);\n        API.fire(this, 'onClick');\n        this.close();\n      }, false);\n    }\n\n    Utils.addListener(this.barDom, 'mouseenter', () => {\n      API.fire(this, 'onHover');\n    }, false);\n    if (this.options.timeout) Utils.addClass(this.barDom, 'noty_has_timeout');\n\n    if (this.options.progressBar) {\n      Utils.addClass(this.barDom, 'noty_has_progressbar');\n    }\n\n    if (Utils.inArray('button', this.options.closeWith)) {\n      Utils.addClass(this.barDom, 'noty_close_with_button');\n      const closeButton = document.createElement('div');\n      Utils.addClass(closeButton, 'noty_close_button');\n      closeButton.innerHTML = 'Ã—';\n      this.barDom.appendChild(closeButton);\n      Utils.addListener(closeButton, 'click', e => {\n        Utils.stopPropagation(e);\n        this.close();\n      }, false);\n    }\n\n    API.fire(this, 'onShow');\n\n    if (this.options.animation.open === null) {\n      this.promises.show = new Promise(resolve => {\n        resolve();\n      });\n    } else if (typeof this.options.animation.open === 'function') {\n      this.promises.show = new Promise(this.options.animation.open.bind(this));\n    } else {\n      Utils.addClass(this.barDom, this.options.animation.open);\n      this.promises.show = new Promise(resolve => {\n        Utils.addListener(this.barDom, Utils.animationEndEvents, () => {\n          Utils.removeClass(this.barDom, this.options.animation.open);\n          resolve();\n        });\n      });\n    }\n\n    this.promises.show.then(() => {\n      const _t = this;\n\n      setTimeout(() => {\n        API.openFlow(_t);\n      }, 100);\n    });\n    return this;\n  }\n  /**\n   * @return {Noty}\n   */\n\n\n  stop() {\n    API.dequeueClose(this);\n    return this;\n  }\n  /**\n   * @return {Noty}\n   */\n\n\n  resume() {\n    API.queueClose(this);\n    return this;\n  }\n  /**\n   * @param {int|boolean} ms\n   * @return {Noty}\n   */\n\n\n  setTimeout(ms) {\n    this.stop();\n    this.options.timeout = ms;\n\n    if (this.barDom) {\n      if (this.options.timeout) {\n        Utils.addClass(this.barDom, 'noty_has_timeout');\n      } else {\n        Utils.removeClass(this.barDom, 'noty_has_timeout');\n      }\n\n      const _t = this;\n\n      setTimeout(function () {\n        // ugly fix for progressbar display bug\n        _t.resume();\n      }, 100);\n    }\n\n    return this;\n  }\n  /**\n   * @param {string} html\n   * @param {boolean} optionsOverride\n   * @return {Noty}\n   */\n\n\n  setText(html, optionsOverride = false) {\n    if (this.barDom) {\n      this.barDom.querySelector('.noty_body').innerHTML = html;\n    }\n\n    if (optionsOverride) this.options.text = html;\n    return this;\n  }\n  /**\n   * @param {string} type\n   * @param {boolean} optionsOverride\n   * @return {Noty}\n   */\n\n\n  setType(type, optionsOverride = false) {\n    if (this.barDom) {\n      let classList = Utils.classList(this.barDom).split(' ');\n      classList.forEach(c => {\n        if (c.substring(0, 11) === 'noty_type__') {\n          Utils.removeClass(this.barDom, c);\n        }\n      });\n      Utils.addClass(this.barDom, `noty_type__${type}`);\n    }\n\n    if (optionsOverride) this.options.type = type;\n    return this;\n  }\n  /**\n   * @param {string} theme\n   * @param {boolean} optionsOverride\n   * @return {Noty}\n   */\n\n\n  setTheme(theme, optionsOverride = false) {\n    if (this.barDom) {\n      let classList = Utils.classList(this.barDom).split(' ');\n      classList.forEach(c => {\n        if (c.substring(0, 12) === 'noty_theme__') {\n          Utils.removeClass(this.barDom, c);\n        }\n      });\n      Utils.addClass(this.barDom, `noty_theme__${theme}`);\n    }\n\n    if (optionsOverride) this.options.theme = theme;\n    return this;\n  }\n  /**\n   * @return {Noty}\n   */\n\n\n  close() {\n    if (this.closed) return this;\n\n    if (!this.shown) {\n      // it's in the queue\n      API.removeFromQueue(this);\n      return this;\n    }\n\n    API.fire(this, 'onClose');\n    this.closing = true;\n\n    if (this.options.animation.close === null || this.options.animation.close === false) {\n      this.promises.close = new Promise(resolve => {\n        resolve();\n      });\n    } else if (typeof this.options.animation.close === 'function') {\n      this.promises.close = new Promise(this.options.animation.close.bind(this));\n    } else {\n      Utils.addClass(this.barDom, this.options.animation.close);\n      this.promises.close = new Promise(resolve => {\n        Utils.addListener(this.barDom, Utils.animationEndEvents, () => {\n          if (this.options.force) {\n            Utils.remove(this.barDom);\n          } else {\n            API.ghostFix(this);\n          }\n\n          resolve();\n        });\n      });\n    }\n\n    this.promises.close.then(() => {\n      API.closeFlow(this);\n      API.handleModalClose(this);\n    });\n    this.closed = true;\n    return this;\n  } // API functions\n\n  /**\n   * @param {boolean|string} queueName\n   * @return {Noty}\n   */\n\n\n  static closeAll(queueName = false) {\n    Object.keys(API.Store).forEach(id => {\n      if (queueName) {\n        if (API.Store[id].options.queue === queueName && API.Store[id].killable) {\n          API.Store[id].close();\n        }\n      } else if (API.Store[id].killable) {\n        API.Store[id].close();\n      }\n    });\n    return this;\n  }\n  /**\n   * @param {string} queueName\n   * @return {Noty}\n   */\n\n\n  static clearQueue(queueName = 'global') {\n    if (API.Queues.hasOwnProperty(queueName)) {\n      API.Queues[queueName].queue = [];\n    }\n\n    return this;\n  }\n  /**\n   * @return {API.Queues}\n   */\n\n\n  static get Queues() {\n    return API.Queues;\n  }\n  /**\n   * @return {API.PageHidden}\n   */\n\n\n  static get PageHidden() {\n    return API.PageHidden;\n  }\n  /**\n   * @param {Object} obj\n   * @return {Noty}\n   */\n\n\n  static overrideDefaults(obj) {\n    API.Defaults = Utils.deepExtend({}, API.Defaults, obj);\n    return this;\n  }\n  /**\n   * @param {int} amount\n   * @param {string} queueName\n   * @return {Noty}\n   */\n\n\n  static setMaxVisible(amount = API.DefaultMaxVisible, queueName = 'global') {\n    if (!API.Queues.hasOwnProperty(queueName)) {\n      API.Queues[queueName] = {\n        maxVisible: amount,\n        queue: []\n      };\n    }\n\n    API.Queues[queueName].maxVisible = amount;\n    return this;\n  }\n  /**\n   * @param {string} innerHtml\n   * @param {String} classes\n   * @param {Function} cb\n   * @param {Object} attributes\n   * @return {NotyButton}\n   */\n\n\n  static button(innerHtml, classes = null, cb, attributes = {}) {\n    return new NotyButton(innerHtml, classes, cb, attributes);\n  }\n  /**\n   * @return {string}\n   */\n\n\n  static version() {\n    return VERSION;\n  }\n  /**\n   * @param {String} workerPath\n   * @return {Push}\n   */\n\n\n  static Push(workerPath) {\n    return new Push(workerPath);\n  }\n\n} // Document visibility change controller\n\nif (typeof window !== 'undefined') {\n  Utils.visibilityChangeFlow();\n}","map":{"version":3,"sources":["D:/#Y2S1/HUMAN COMPUTER INTERACTION/Prototype/my-app/node_modules/noty/src/index.js"],"names":["Promise","Utils","API","NotyButton","Push","Noty","constructor","options","deepExtend","Defaults","Store","id","generateID","closeTimer","barDom","layoutDom","progressDom","showing","shown","closed","closing","killable","timeout","closeWith","length","hasSound","sounds","sources","soundPlayed","listeners","beforeShow","onShow","afterShow","onClose","afterClose","onClick","onHover","onTemplate","promises","show","close","on","callbacks","eventName","cb","hasOwnProperty","push","killer","closeAll","queueCounts","getQueueCounts","queue","current","maxVisible","PageHidden","visibilityControl","addToQueue","inArray","conditions","createAudioElements","titleCount","docTitle","increment","fire","build","handleModal","force","insertBefore","firstChild","appendChild","hasButtons","Object","keys","buttons","forEach","key","btn","querySelector","addListener","e","stopPropagation","addClass","progressBar","closeButton","document","createElement","innerHTML","animation","open","resolve","bind","animationEndEvents","removeClass","then","_t","setTimeout","openFlow","stop","dequeueClose","resume","queueClose","ms","setText","html","optionsOverride","text","setType","type","classList","split","c","substring","setTheme","theme","removeFromQueue","remove","ghostFix","closeFlow","handleModalClose","queueName","clearQueue","Queues","overrideDefaults","obj","setMaxVisible","amount","DefaultMaxVisible","button","innerHtml","classes","attributes","version","VERSION","workerPath","window","visibilityChangeFlow"],"mappings":"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","sourcesContent":["/* global VERSION */\n\nimport 'noty.scss'\nimport Promise from 'es6-promise'\nimport * as Utils from 'utils'\nimport * as API from 'api'\nimport { NotyButton } from 'button'\nimport { Push } from 'push'\n\nexport default class Noty {\n  /**\n   * @param {object} options\n   * @return {Noty}\n   */\n  constructor (options = {}) {\n    this.options = Utils.deepExtend({}, API.Defaults, options)\n\n    if (API.Store[this.options.id]) {\n      return API.Store[this.options.id]\n    }\n\n    this.id = this.options.id || Utils.generateID('bar')\n    this.closeTimer = -1\n    this.barDom = null\n    this.layoutDom = null\n    this.progressDom = null\n    this.showing = false\n    this.shown = false\n    this.closed = false\n    this.closing = false\n    this.killable = this.options.timeout || this.options.closeWith.length > 0\n    this.hasSound = this.options.sounds.sources.length > 0\n    this.soundPlayed = false\n    this.listeners = {\n      beforeShow: [],\n      onShow: [],\n      afterShow: [],\n      onClose: [],\n      afterClose: [],\n      onClick: [],\n      onHover: [],\n      onTemplate: []\n    }\n    this.promises = {\n      show: null,\n      close: null\n    }\n    this.on('beforeShow', this.options.callbacks.beforeShow)\n    this.on('onShow', this.options.callbacks.onShow)\n    this.on('afterShow', this.options.callbacks.afterShow)\n    this.on('onClose', this.options.callbacks.onClose)\n    this.on('afterClose', this.options.callbacks.afterClose)\n    this.on('onClick', this.options.callbacks.onClick)\n    this.on('onHover', this.options.callbacks.onHover)\n    this.on('onTemplate', this.options.callbacks.onTemplate)\n\n    return this\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} cb\n   * @return {Noty}\n   */\n  on (eventName, cb = () => {}) {\n    if (typeof cb === 'function' && this.listeners.hasOwnProperty(eventName)) {\n      this.listeners[eventName].push(cb)\n    }\n\n    return this\n  }\n\n  /**\n   * @return {Noty}\n   */\n  show () {\n    if (this.showing || this.shown) {\n      return this // preventing multiple show\n    }\n\n    if (this.options.killer === true) {\n      Noty.closeAll()\n    } else if (typeof this.options.killer === 'string') {\n      Noty.closeAll(this.options.killer)\n    }\n\n    let queueCounts = API.getQueueCounts(this.options.queue)\n\n    if (\n      queueCounts.current >= queueCounts.maxVisible ||\n      (API.PageHidden && this.options.visibilityControl)\n    ) {\n      API.addToQueue(this)\n\n      if (\n        API.PageHidden &&\n        this.hasSound &&\n        Utils.inArray('docHidden', this.options.sounds.conditions)\n      ) {\n        Utils.createAudioElements(this)\n      }\n\n      if (\n        API.PageHidden &&\n        Utils.inArray('docHidden', this.options.titleCount.conditions)\n      ) {\n        API.docTitle.increment()\n      }\n\n      return this\n    }\n\n    API.Store[this.id] = this\n\n    API.fire(this, 'beforeShow')\n\n    this.showing = true\n\n    if (this.closing) {\n      this.showing = false\n      return this\n    }\n\n    API.build(this)\n    API.handleModal(this)\n\n    if (this.options.force) {\n      this.layoutDom.insertBefore(this.barDom, this.layoutDom.firstChild)\n    } else {\n      this.layoutDom.appendChild(this.barDom)\n    }\n\n    if (\n      this.hasSound &&\n      !this.soundPlayed &&\n      Utils.inArray('docVisible', this.options.sounds.conditions)\n    ) {\n      Utils.createAudioElements(this)\n    }\n\n    if (Utils.inArray('docVisible', this.options.titleCount.conditions)) {\n      API.docTitle.increment()\n    }\n\n    this.shown = true\n    this.closed = false\n\n    // bind button events if any\n    if (API.hasButtons(this)) {\n      Object.keys(this.options.buttons).forEach(key => {\n        const btn = this.barDom.querySelector(\n          `#${this.options.buttons[key].id}`\n        )\n        Utils.addListener(btn, 'click', e => {\n          Utils.stopPropagation(e)\n          this.options.buttons[key].cb(this)\n        })\n      })\n    }\n\n    this.progressDom = this.barDom.querySelector('.noty_progressbar')\n\n    if (Utils.inArray('click', this.options.closeWith)) {\n      Utils.addClass(this.barDom, 'noty_close_with_click')\n      Utils.addListener(\n        this.barDom,\n        'click',\n        e => {\n          Utils.stopPropagation(e)\n          API.fire(this, 'onClick')\n          this.close()\n        },\n        false\n      )\n    }\n\n    Utils.addListener(\n      this.barDom,\n      'mouseenter',\n      () => {\n        API.fire(this, 'onHover')\n      },\n      false\n    )\n\n    if (this.options.timeout) Utils.addClass(this.barDom, 'noty_has_timeout')\n    if (this.options.progressBar) {\n      Utils.addClass(this.barDom, 'noty_has_progressbar')\n    }\n\n    if (Utils.inArray('button', this.options.closeWith)) {\n      Utils.addClass(this.barDom, 'noty_close_with_button')\n\n      const closeButton = document.createElement('div')\n      Utils.addClass(closeButton, 'noty_close_button')\n      closeButton.innerHTML = 'Ã—'\n      this.barDom.appendChild(closeButton)\n\n      Utils.addListener(\n        closeButton,\n        'click',\n        e => {\n          Utils.stopPropagation(e)\n          this.close()\n        },\n        false\n      )\n    }\n\n    API.fire(this, 'onShow')\n\n    if (this.options.animation.open === null) {\n      this.promises.show = new Promise(resolve => {\n        resolve()\n      })\n    } else if (typeof this.options.animation.open === 'function') {\n      this.promises.show = new Promise(this.options.animation.open.bind(this))\n    } else {\n      Utils.addClass(this.barDom, this.options.animation.open)\n      this.promises.show = new Promise(resolve => {\n        Utils.addListener(this.barDom, Utils.animationEndEvents, () => {\n          Utils.removeClass(this.barDom, this.options.animation.open)\n          resolve()\n        })\n      })\n    }\n\n    this.promises.show.then(() => {\n      const _t = this\n      setTimeout(\n        () => {\n          API.openFlow(_t)\n        },\n        100\n      )\n    })\n\n    return this\n  }\n\n  /**\n   * @return {Noty}\n   */\n  stop () {\n    API.dequeueClose(this)\n    return this\n  }\n\n  /**\n   * @return {Noty}\n   */\n  resume () {\n    API.queueClose(this)\n    return this\n  }\n\n  /**\n   * @param {int|boolean} ms\n   * @return {Noty}\n   */\n  setTimeout (ms) {\n    this.stop()\n    this.options.timeout = ms\n\n    if (this.barDom) {\n      if (this.options.timeout) {\n        Utils.addClass(this.barDom, 'noty_has_timeout')\n      } else {\n        Utils.removeClass(this.barDom, 'noty_has_timeout')\n      }\n\n      const _t = this\n      setTimeout(\n        function () {\n          // ugly fix for progressbar display bug\n          _t.resume()\n        },\n        100\n      )\n    }\n\n    return this\n  }\n\n  /**\n   * @param {string} html\n   * @param {boolean} optionsOverride\n   * @return {Noty}\n   */\n  setText (html, optionsOverride = false) {\n    if (this.barDom) {\n      this.barDom.querySelector('.noty_body').innerHTML = html\n    }\n\n    if (optionsOverride) this.options.text = html\n\n    return this\n  }\n\n  /**\n   * @param {string} type\n   * @param {boolean} optionsOverride\n   * @return {Noty}\n   */\n  setType (type, optionsOverride = false) {\n    if (this.barDom) {\n      let classList = Utils.classList(this.barDom).split(' ')\n\n      classList.forEach(c => {\n        if (c.substring(0, 11) === 'noty_type__') {\n          Utils.removeClass(this.barDom, c)\n        }\n      })\n\n      Utils.addClass(this.barDom, `noty_type__${type}`)\n    }\n\n    if (optionsOverride) this.options.type = type\n\n    return this\n  }\n\n  /**\n   * @param {string} theme\n   * @param {boolean} optionsOverride\n   * @return {Noty}\n   */\n  setTheme (theme, optionsOverride = false) {\n    if (this.barDom) {\n      let classList = Utils.classList(this.barDom).split(' ')\n\n      classList.forEach(c => {\n        if (c.substring(0, 12) === 'noty_theme__') {\n          Utils.removeClass(this.barDom, c)\n        }\n      })\n\n      Utils.addClass(this.barDom, `noty_theme__${theme}`)\n    }\n\n    if (optionsOverride) this.options.theme = theme\n\n    return this\n  }\n\n  /**\n   * @return {Noty}\n   */\n  close () {\n    if (this.closed) return this\n\n    if (!this.shown) {\n      // it's in the queue\n      API.removeFromQueue(this)\n      return this\n    }\n\n    API.fire(this, 'onClose')\n\n    this.closing = true\n\n    if (this.options.animation.close === null || this.options.animation.close === false) {\n      this.promises.close = new Promise(resolve => {\n        resolve()\n      })\n    } else if (typeof this.options.animation.close === 'function') {\n      this.promises.close = new Promise(\n        this.options.animation.close.bind(this)\n      )\n    } else {\n      Utils.addClass(this.barDom, this.options.animation.close)\n      this.promises.close = new Promise(resolve => {\n        Utils.addListener(this.barDom, Utils.animationEndEvents, () => {\n          if (this.options.force) {\n            Utils.remove(this.barDom)\n          } else {\n            API.ghostFix(this)\n          }\n          resolve()\n        })\n      })\n    }\n\n    this.promises.close.then(() => {\n      API.closeFlow(this)\n      API.handleModalClose(this)\n    })\n\n    this.closed = true\n\n    return this\n  }\n\n  // API functions\n\n  /**\n   * @param {boolean|string} queueName\n   * @return {Noty}\n   */\n  static closeAll (queueName = false) {\n    Object.keys(API.Store).forEach(id => {\n      if (queueName) {\n        if (\n          API.Store[id].options.queue === queueName && API.Store[id].killable\n        ) {\n          API.Store[id].close()\n        }\n      } else if (API.Store[id].killable) {\n        API.Store[id].close()\n      }\n    })\n    return this\n  }\n\n  /**\n   * @param {string} queueName\n   * @return {Noty}\n   */\n  static clearQueue (queueName = 'global') {\n    if (API.Queues.hasOwnProperty(queueName)) {\n      API.Queues[queueName].queue = []\n    }\n    return this\n  }\n\n  /**\n   * @return {API.Queues}\n   */\n  static get Queues () {\n    return API.Queues\n  }\n\n  /**\n   * @return {API.PageHidden}\n   */\n  static get PageHidden () {\n    return API.PageHidden\n  }\n\n  /**\n   * @param {Object} obj\n   * @return {Noty}\n   */\n  static overrideDefaults (obj) {\n    API.Defaults = Utils.deepExtend({}, API.Defaults, obj)\n    return this\n  }\n\n  /**\n   * @param {int} amount\n   * @param {string} queueName\n   * @return {Noty}\n   */\n  static setMaxVisible (amount = API.DefaultMaxVisible, queueName = 'global') {\n    if (!API.Queues.hasOwnProperty(queueName)) {\n      API.Queues[queueName] = {maxVisible: amount, queue: []}\n    }\n\n    API.Queues[queueName].maxVisible = amount\n    return this\n  }\n\n  /**\n   * @param {string} innerHtml\n   * @param {String} classes\n   * @param {Function} cb\n   * @param {Object} attributes\n   * @return {NotyButton}\n   */\n  static button (innerHtml, classes = null, cb, attributes = {}) {\n    return new NotyButton(innerHtml, classes, cb, attributes)\n  }\n\n  /**\n   * @return {string}\n   */\n  static version () {\n    return VERSION\n  }\n\n  /**\n   * @param {String} workerPath\n   * @return {Push}\n   */\n  static Push (workerPath) {\n    return new Push(workerPath)\n  }\n}\n\n// Document visibility change controller\nif (typeof window !== 'undefined') {\n  Utils.visibilityChangeFlow()\n}\n"]},"metadata":{},"sourceType":"module"}